#===============================================================================
# This Makefile was automatically generated by ./configure
#===============================================================================
# Echo variables for fancy outputs
#===============================================================================
bold  = $(shell tput bold)
reset = $(shell tput sgr0)

# Preprocessor variables
#===============================================================================
INTERACTIVE=0
POSIX = 1
POTOK = 1
PNCDF = 1
PHDF5 = 1
ADIOS = 1
MPIIO = 1

# Compiler and flags
#===============================================================================
F90       = mpif90
FFLAGS    = -O3 -fbacktrace -g -ffree-line-length-0
CPPFLAGS  = -x f95-cpp-input -DINTERACTIVE=$(INTERACTIVE) -DPOSIX=$(POSIX) -DPOTOK=$(POTOK) -DPNCDF=$(PNCDF) -DPHDF5=$(PHDF5) -DADIOS=$(ADIOS) -DMPIIO=$(MPIIO) 
MODFLAGS  = -J$(BINDIR)
HDFINC    = -I/local/home/mjoos/soft/hdf5-para/include/
HDFLIB    = -L/local/home/mjoos/soft/hdf5-para/lib -lhdf5_fortran -lhdf5 -lz
CDFINC    = -I/local/home/mjoos/soft/build/include/
CDFLIB    = -L/local/home/mjoos/soft/build/lib -lpnetcdf
ifeq ($(ADIOS),1)
ADIOSDIR  = /local/home/mjoos/soft/build
ADIOSINC  = $(shell ${ADIOSDIR}/bin/adios_config -c -f)
ADIOSLIB  = $(shell ${ADIOSDIR}/bin/adios_config -l -f)
endif
LIBFLAGS  = $(HDFINC) $(CDFINC) $(ADIOSINC) $(MPIINC)
FLAGS     = $(FFLAGS) $(PHYFLAGS)
ALLFLAGS  = $(LIBFLAGS) $(CPPFLAGS) $(FLAGS)
MAINFLAGS = $(ALLFLAGS) -I$(BINDIR) 
ALLLIBS   = $(HDFLIB) $(CDFLIB) $(MPILIB) $(ADIOSLIB)

# Sources, modules and binaries directories
#===============================================================================
SRCDIR   = src
MODDIR   = $(SRCDIR)/modules
BINDIR   = bin
BINDIRSC = ../$(BINDIR)
BINDIRMD = ../../$(BINDIR)
VPATH    = $(SRCDIR):$(MODDIR)
MODSRC   = $(wildcard $(MODDIR)/*f90)
MODOBJ   = $(join $(addsuffix $(BINDIRMD)/, $(dir $(MODSRC))), $(notdir $(MODSRC:.f90=.o)))
MAINSRC  = $(wildcard $(SRCDIR)/*f90)
MAINOBJ  = $(join $(addsuffix $(BINDIRSC)/, $(dir $(MAINSRC))), $(notdir $(MAINSRC:.f90=.o)))
ALLOBJ   = $(MODOBJ) $(MAINOBJ)

#============================================================================
all: BRIO
	@echo "======================== $(bold)BRIO$(reset) =========================="
	@echo "============= Benchmark for parallel I/O ==============="
	@echo "========================================================"
	@echo "With: "
ifeq ($(POSIX),1)
	@echo " - $(bold)Sequential POSIX I/O$(reset)"
endif
ifeq ($(POTOK),1)
	@echo " - $(bold)Sequential POSIX I/O with token management$(reset)"
endif
ifeq ($(PNCDF),1)
	@echo " - $(bold)Parallel NetCDF I/O$(reset)"
endif
ifeq ($(PHDF5),1)
	@echo " - $(bold)Parallel HDF5 I/O$(reset)"
endif
ifeq ($(ADIOS),1)
	@echo " - $(bold)Adaptive I/O System$(reset)"
endif
ifeq ($(MPIIO),1)
	@echo " - $(bold)MPI-IO$(reset)"
endif
	@echo "========================================================"
	@echo " > $(bold)compilation successful!$(reset)"
#== Modules ==================================================================
$(MODDIR)/$(BINDIRMD)/%.o: %.f90
	@echo "> $(bold)Compiling modules$(reset): "$@
	$(F90) $(ALLFLAGS) -c $^ -o $@ $(MODFLAGS)
#== Main sources ===============================================================
$(SRCDIR)/$(BINDIRSC)/%.o: %.f90
	@echo "> $(bold)Compiling main sources...$(reset)"
	$(F90) $(MAINFLAGS) -c $^ -o $@
#============================================================================
BRIO: adios $(ALLOBJ)
	@echo " > $(bold)Compiling BRIO...$(reset)"
	$(F90) $(FLAGS) -o ./bin/BRIO $(ALLOBJ) $(ALLLIBS)
#============================================================================
ifeq ($(ADIOS),1)
adios:
	@echo " > $(bold)Generating *.fh files...$(reset)"
	gpp.py input/adios_BRIO.xml
	mv *fh $(MODDIR)
else
adios:
endif
#============================================================================
clean:
	@echo " > $(bold)Cleaning sources and binaries directories...$(reset)"
	rm -rf $(BINDIR)/*.o $(BINDIR)/*.mod $(MODDIR)/*.fh input/*.h5 input/*.nc input/*.bp input/*.mp input/sequentialio/

